[project]
name = "A-Time-Series-Data-Driven-RF-XGBoost-Hybrid-Migration-Learning-Model"
version = "0.1.0"
description = "A Time Series Data-Driven RF-XGBoost Hybrid Migration Learning Model"
authors = [
    {name = "SheathedSharp", email = "21zxzhu@stu.edu.cn"}
]
readme = "README.md"
requires-python = ">=3.8"
license = {file = "LICENSE.md"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "pandas>=1.5.0",
    "numpy>=1.21.0", 
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "scikit-learn>=1.1.0",
    "xgboost>=1.6.0",
    "lightgbm>=3.3.0",
    "tabulate>=0.9.0",
    "openpyxl>=3.0.0",
    "rich>=13.0.0",
    "halo>=0.0.31",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=0.991",
]
jupyter = [
    "jupyter>=1.0.0",
    "ipykernel>=6.0.0",
    "jupyterlab>=3.0.0",
]

[project.scripts]
fault-analysis = "scripts.fault_analysis:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["scripts", "models", "utils", "examples"]

[tool.hatch.build.targets.wheel.sources]
"scripts" = "scripts"
"models" = "models"  
"utils" = "utils"
"examples" = "examples"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["test"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
